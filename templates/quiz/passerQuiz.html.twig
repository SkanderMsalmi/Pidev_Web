{% extends "base.html.twig" %}

{% block body %}


    <form id="regForm" action="">

<h1>{{ quiz.domaine | upper }} QUIZ</h1>

<!-- One "tab" for each step in the form: -->
<div class="tab">
    <h3> {{ quiz.idquestion1.enonce }} </h3>
    {% if quiz.idquestion1.propositions is empty %}
         <h1>IL N'EXISTE RIEN</h1>
    {% else %}
       <ul> <input type="radio" id="prop1"> {{ quiz.idquestion1.propositions[0].proposition }}</input></ul>
       <ul> <input type="radio" id="prop2"> {{ quiz.idquestion1.propositions[1].proposition }}</input></ul>
       <ul> <input type="radio" id="prop3"> {{ quiz.idquestion1.propositions[2].proposition }}</input></ul>
    {% endif %}
</div>

<div class="tab">
    <h3> {{ quiz.idquestion2.enonce }} </h3>
    {% if quiz.idquestion2.propositions is empty %}
         <h1>IL N'EXISTE RIEN</h1>
    {% else %}
       <ul> <input type="radio" id="prop1"> {{ quiz.idquestion2.propositions[0].proposition }}</input></ul>
       <ul> <input type="radio" id="prop2"> {{ quiz.idquestion2.propositions[1].proposition }}</input></ul>
       <ul> <input type="radio" id="prop3"> {{ quiz.idquestion2.propositions[2].proposition }}</input></ul>
    {% endif %}
</div>

<div class="tab">
    <h3> {{ quiz.idquestion3.enonce }} </h3>
    {% if quiz.idquestion3.propositions is empty %}
         <h1>IL N'EXISTE RIEN</h1>
    {% else %}
       <ul> <input type="radio" id="prop1"> {{ quiz.idquestion3.propositions[0].proposition }}</input></ul>
       <ul> <input type="radio" id="prop2"> {{ quiz.idquestion3.propositions[1].proposition }}</input></ul>
       <ul> <input type="radio" id="prop3"> {{ quiz.idquestion3.propositions[2].proposition }}</input></ul>
    {% endif %}
</div>

<div class="tab">
    <h3> {{ quiz.idquestion4.enonce }} </h3>
    {% if quiz.idquestion4.propositions is empty %}
        <h1>IL N'EXISTE RIEN</h1>
    {% else %}
        <ul> <input type="radio" id="prop1"> {{ quiz.idquestion4.propositions[0].proposition }}</input></ul>
        <ul> <input type="radio" id="prop2"> {{ quiz.idquestion4.propositions[1].proposition }}</input></ul>
        <ul> <input type="radio" id="prop3"> {{ quiz.idquestion4.propositions[2].proposition }}</input></ul>
    {% endif %}
</div>

<div class="tab">
    <h3> {{ quiz.idquestion5.enonce }} </h3>
    {% if quiz.idquestion5.propositions is empty %}
        <h1>IL N'EXISTE RIEN</h1>
    {% else %}
        <ul> <input type="radio" id="prop1"> {{ quiz.idquestion5.propositions[0].proposition }}</input></ul>
        <ul> <input type="radio" id="prop2"> {{ quiz.idquestion5.propositions[1].proposition }}</input></ul>
        <ul> <input type="radio" id="prop3"> {{ quiz.idquestion5.propositions[2].proposition }}</input></ul>
    {% endif %}
</div>

<div style="overflow:auto;">
  <div style="float:right;">
    <button type="button"  class="btn btn-success" id="nextBtn" onclick="nextPrev(1)">Suivant</button>
  </div>
</div>

<!-- Circles which indicates the steps of the form: -->
<div style="text-align:center;margin-top:40px;">
  <span class="step"></span>
  <span class="step"></span>
  <span class="step"></span>
  <span class="step"></span>
  <span class="step"></span>
</div>

</form>


<script>

var currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the current tab

function showTab(n) {
  // This function will display the specified tab of the form ...
  var x = document.getElementsByClassName("tab");
  x[n].style.display = "block";
  // ... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById("prevBtn").style.display = "none";
  } else {
    document.getElementById("prevBtn").style.display = "inline";
  }
  if (n == (x.length - 1)) {
    document.getElementById("nextBtn").innerHTML = "Terminer";
  } else {
    document.getElementById("nextBtn").innerHTML = "Suivant";
  }
  // ... and run a function that displays the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {

  // This function will figure out which tab to display
  var x = document.getElementsByClassName("tab");
  // Exit the function if any field in the current tab is invalid:
  if (n == 1 && !validateForm()) return false;
  // Hide the current tab:
  x[currentTab].style.display = "none";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form... :
  if (currentTab >= x.length) {
    //...the form gets submitted:
    document.getElementById("regForm").submit();
    return false;
  }
  // Otherwise, display the correct tab:
  showTab(currentTab);
}


function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName("tab");
  y = x[currentTab].getElementsByTagName("input");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == "") {
      // add an "invalid" class to the field:
      y[i].className += " invalid";
      // and set the current valid status to false:
      valid = false;
    }
  }
  // If the valid status is true, mark the step as finished and valid:
  if (valid) {
    document.getElementsByClassName("step")[currentTab].className += " finish";
  }
  return valid; // return the valid status
}

function fixStepIndicator(n) {
  // This function removes the "active" class of all steps...
  var i, x = document.getElementsByClassName("step");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace(" active", "");
  }
  //... and adds the "active" class to the current step:
  x[n].className += " active";
}

        function validate(){
          var spare= document.getElementById('prop1');
          if (spare.checked){
            alert("checked") ;
          }else{
            alert("You didn't check spare-price! Let me check it for you.")
          }
        }
</script>
{% endblock %} 
